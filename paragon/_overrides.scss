@import 'variables';
// This file is included after all of Bootstrap. Any customization that can't
// be made using variable definitions should be done here.

// Alerts

.alert-dismissible .close {
  color: theme-color("gray");
  opacity: 1;

  &:hover {
    color: theme-color("gray");
  }
}


// Badges

.badge {
  font-family: var(--pgn-typography-font-family-sans-serif);
  line-height: 1.25rem;

  .badge-info {
    --pgn-badge-bg-color: var(--pgn-color-badge-bg-info);
  }
}

// Buttons

.btn {
  text-decoration: none;
}

.btn-link {
  text-decoration: none;

  &.hover,
  &:hover {
    text-decoration: none;
  }

  &.focus,
  &:focus {
    outline: 1px dotted;
    outline: 5px auto -webkit-focus-ring-color;
    text-decoration: none;
  }
}

// Avatar buttons in tertiary style (the default) are darker than regular tertiary buttons
.btn-avatar.btn-tertiary {
  color: var(--pgn-color-primary-500);
}

// Forms

// This loop is modeled after the loop in bootstrap's _forms.scss
// which calls a mixin, form-validation-state($state, $color, $icon).
// We make several overrides here for icons and focus states.
@each $state, $data in $form-validation-states {
  $color: map-get($data, color);
  $icon: map-get($data, icon);

  // Do not use validation color for feedback text
  // Add the validation icon to feedback text
  .#{$state}-feedback {
    color: $body-color;
    font-weight: 400;

    &:before {
      content: '';
      background-image: $icon;
      height: 1rem;
      width: 1rem;
      display: inline-block;
      vertical-align: text-bottom;
      margin-right: .3em;
    }
  }

  // Override focus states, use the standard focus
  // instead of a generated color.
  .form-control {
    .was-validated &:#{$state},
    &.is-#{$state} {
      &:focus {
        border-color: $color;
        box-shadow: 0 0 0 var(--pgn-size-form-input-width-focus) $color;
      }
    }
  }

  .custom-select {
    .was-validated &:#{$state},
    &.is-#{$state} {
      &:focus {
        border-color: $color;
        box-shadow: 0 0 0 var(--pgn-size-form-input-width-focus) $color;
      }
    }
  }
}

select.form-control {
  background-repeat: no-repeat;
  background-position: right 1rem center;
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
}

.popover-header {
  border-bottom: solid 1px var(--pgn-color-gray-100);
}

// Grid

.container {
  padding-left: var(--pgn-spacing-grid-gutter-width);
  padding-right: var(--pgn-spacing-grid-gutter-width);
}

.container-fluid {
  padding-left: var(--pgn-spacing-grid-gutter-width);
  padding-right: var(--pgn-spacing-grid-gutter-width);
}


// Typography

body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

h1, .h1 {
  line-height: calc((44 / 16) * 1rem);
  letter-spacing: -2%;

  @media (--max-pgn-size-breakpoint-xs) {
    line-height: calc((40 / 16) * 1rem);
  }

  .mobile-type & {
    line-height: calc((40 / 16) * 1rem);
  }
}

h2, .h2 {
  line-height: calc((36 / 16) * 1rem);
}

h3, .h3 {
  line-height: calc((28 / 16) * 1rem);
}

h4, .h4 {
  line-height: calc((24 / 16) * 1rem);
}

h5, .h5 {
  line-height: calc((20 / 16) * 1rem);
}

h6, .h6 {
  line-height: calc((20 / 16) * 1rem);
}

.lead {
  line-height: calc((36 / 16) * 1rem);
}

.small {
  line-height: calc((24 / 16) * 1rem);
}

.x-small {
  line-height: calc((20 / 16) * 1rem);
}

p > a[href]:not(.btn),
a.inline-link {
  text-decoration-line: underline;
  text-decoration-color: rgba(var(--pgn-color-link-base), .3);

  &:hover {
    text-decoration-color: rgba(var(--pgn-color-link-base), 1);
  }
}

// Temporary fix for search fields. See https://github.com/edx/brand-edx.org/pull/9#issuecomment-723208124

.pgn__searchfield {
  border-radius: 0 !important;

  .btn {
    background: var(--pgn-color-form-input-bg-base);
    display: flex;
  }

  &.has-focus {
    border-color: var(--pgn-color-form-input-focus-border) !important;

    .btn {
      background: var(--pgn-color-form-input-focus-bg);
    }
  }
}

// Progress Bar
.progress {
  border: var(--pgn-size-progress-bar-border-width) solid var(--pgn-color-progress-bar-border);
}

.progress-bar {
  background-color: var(--pgn-color-progress-bar-bar-bg-base);
}
